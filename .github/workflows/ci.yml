name: Monitoring Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build-and-run:
    runs-on: ubuntu-latest
    env:
      TF_VAR_grafana_token: ${{ secrets.GRAFANA_TOKEN }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      # - name: Install Jsonnet
      #   run: sudo apt-get update && sudo apt-get install -y jsonnet

      # - name: Install grafanactl
      #   run: |
      #     curl -L -o grafanactl-x86_64.tar.gz "https://github.com/grafana/grafanactl/releases/download/v0.0.5/grafanactl_Linux_x86_64.tar.gz"
      #     tar -xzf grafanactl-x86_64.tar.gz
      #     chmod +x grafanactl
      #     sudo mv grafanactl /usr/local/bin/grafanactl
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Start monitoring stack
        run: docker compose up -d

      - name: Show running containers
        run: docker ps

      - name: Wait for Grafana to be ready
        run: |
          for i in {1..30}; do 
            if curl -s http://localhost:3000/api/health | grep '"database": "ok"'; then 
               echo "Grafana is ready" 
               exit 0 
            fi 
            echo "Waiting for Grafana..." 
            sleep 5 
          done 
          echo "Grafana did not start in time" >&2 exit 1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Validate
        run: terraform validate
        working-directory: ./terraform

      - name: Debug Terraform vars
        run: |
          if [ -n "$TF_VAR_grafana_token" ]; then
            echo "grafana_token is set (length: ${#TF_VAR_grafana_token})"
            echo "$TF_VAR_grafana_token"
          else
            echo "grafana_token is NOT set!"
          fi

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        working-directory: ./terraform

      # - name: Configure grafanactl
      #   run: |
      #     set -e
      #     grafanactl config set contexts.default.grafana.server http://localhost:3000
      #     grafanactl config set contexts.default.grafana.org-id 1
      #     grafanactl config set contexts.default.grafana.user admin
      #     grafanactl config set contexts.default.grafana.password admin
      #     grafanactl config check

      # - name: Push Dashboard to Grafana
      #   run: |
      #     set -e
      #     grafanactl resources push dashboards --path ./generated/dashboard.json
      #     echo "Success!"
